<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>MOV</title>
<link rel="StyleSheet" href="../style.css" type="text/css" title="general">
</head>
<body class="opcode">

<!-- ############################### -->
<!-- # Opcode                      # -->
<!-- ############################### -->
<h1>
    MOV : Move<br>
    <!-- SUMMARY_TABLE_INFO { description => "Move" } -->
</h1>


<!-- The following information is used to generate the text in the opcode table in ../opcodes.htm -->
<!-- SUMMARY_TABLE_INFO { section => "Movement Instructions" } -->
<!-- SUMMARY_TABLE_INFO { opcode => "MOV32I", subsection => 4 } -->
<!-- SUMMARY_TABLE_INFO { opcode => "MOV", subsection => 4 } -->

<!-- ############################### -->
<!-- # Format                      # -->
<!-- ############################### -->
<h2>Format:</h2>
<div class="Format">

<pre>
SPA 5.0:
<code>        <code>{@{!}Pg}</code>   <code><b>MOV</b></code>      <code>Rd, Sb {, #PixMaskU04}</code>      <code><!-- OPEX_COUNT_2 --><!-- BEGIN &opex("MATH") -->{&amp;req_6}</code>   <code>{?sched}<!-- END &opex("MATH") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "MOV" } -->
<code>        <code>{@{!}Pg}</code>   <code><b>MOV32I</b></code>   <code>Rd, #Imm32 {, #PixMask04}</code>   <code><!-- OPEX_COUNT_2 --><!-- BEGIN &opex("MATH") -->{&amp;req_6}</code>   <code>{?sched}<!-- END &opex("MATH") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "MOV32I" } -->

<b>MOV</b> source operand Sb may have one of these forms:
    Rb                      // 32-bit register
    c[ImmU05][ImmU16]       // 32-bit constant with immediate slot and byte address (or c[ImmU20])
    ImmS20                  // 32-bit sign-extended 20-bit immediate
</pre>

<p>

</div>

<!-- ############################### -->
<!-- # Description                 # -->
<!-- ############################### -->
<h2>Description:</h2>
<div class="Description">

<p>
Move source operand to destination register Rd, as uninterpreted bits.</p>
<p>
The optional 4-bit pixel enable mask ImmU04 defaults to value 0xF (all enabled) when omitted.</p>

</div>

<!-- ############################### -->
<!-- # Additional Information      # -->
<!-- ############################### -->
<h2>Additional Information:</h2>
<div class="AdditionalInformation">

<p>
TXD emulation may specify the optional 4-bit mask ImmU04 to enable (1) or disable (0)
each of the pixels in a pixel quad.  The same mask is applied to all quads in a warp. 
The correspondence between pixels and mask bit positions (bit 0 is the least-significant 
right-most bit) is as follows:</p>
<pre>
    0 1
    2 3
</pre>

<p>
Note: This order may be different from the pixel order of other pixel masks used in the GPU.</p>

</div>

<!-- ############################### -->
<!-- # Examples                    # -->
<!-- ############################### -->
<h2>Examples:</h2>
<div class="Examples">

<pre>
<b>MOV</b>    R0, c[0][124];
<b>MOV32I</b> R0, 0x3F800000;
</pre>

</div>

<!-- ############################### -->
<!-- # Tail                        # -->
<!-- ############################### -->
<div class="Tail">
<p><a href="../opcodes.htm">Back to Index of Instructions</a></p>
</div>
</body>
</html>
