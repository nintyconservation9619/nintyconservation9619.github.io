<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>FSWZADD</title>
<link rel="StyleSheet" href="../style.css" type="text/css" title="general">
</head>
<body class="opcode">

<!-- ############################### -->
<!-- # Opcode                      # -->
<!-- ############################### -->
<h1>
    FSWZADD : FP32 Add used for FSWZ emulation<br>
    <!-- SUMMARY_TABLE_INFO { description => "FP32 Add used for FSWZ emulation" } -->
</h1>


<!-- The following information is used to generate the text in the opcode table in ../opcodes.htm -->
<!-- SUMMARY_TABLE_INFO { section => "Floating Point Instructions" } -->
<!-- SUMMARY_TABLE_INFO { opcode => "FSWZADD", subsection => 0 } -->

<!-- ############################### -->
<!-- # Format                      # -->
<!-- ############################### -->
<h2>Format:</h2>
<div class="Format">

<pre>

SPA 5.0:
<code>        <code>{@{!}Pg}</code>   <code><b>FSWZADD</b>{.FTZ}{.rnd}{.NDV}</code>   <code>Rd{.CC}, Ra, Rb, znpControl </code>   <code><!-- OPEX_COUNT_2 --><!-- BEGIN &opex("MATH") -->{&amp;req_6}</code>   <code>{?sched}<!-- END &opex("MATH") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "FSWZADD" } -->

 .FTZ        denorm inputs/output is flushed to sign preserving 0.0.

 .rnd        {.RN*, .RM, .RP, .RZ}
    .RN - Round to the nearest even. This is the default.
    .RM - Round towards -Infinity (floor)
    .RP - Round towards +Infinity (ceiling)
    .RZ - Round towards 0 (truncate)

 .NDV        Force the quad to be treated as non-divergent
             if .NDV is FALSE, 
                  quad is determined to "divergent" if some threads in quad are active and some are not.
                  If the quad is hw divergent, output of FSWZ is forced to 0.0 or
                  +Inf (dependent on State.ShaderControl.DefaultPartial). 
             However, if .NDV is TRUE, 
                  then the hw quad divergence bit will be ignored,
                  and the quad deemed hw non-divergent allowing the expected fp add.

 .CC         Write condition code flags

znpControl :  specifies  modifiers  for Ra and Rb source registers, as 4 sets of character pairs.
              Each set is associated with a specific thread/pixel in a quad. 
              The ordering of these sets is UL,UR,LL,LR in pixel quad i.e.

              | Thread0 (P0:UL)  Thread1 (P1:UR) |
              | Thread2 (P2:LL)  Thread3 (P3:LR) |

              The valid modifier control character pairs are:
</pre>

<TABLE border="1" cellpadding="5%">
    <CAPTION><EM>znpControl table </EM></CAPTION>
<TR>
    <th> char pair </th>
    <th> Ra modifier </th>
    <th> Rb modifier </th>
</TR>
<TR>
    <TD> PP </TD>
    <TD> none </TD>
    <TD> none  </TD>
</TR>
<TR>
    <TD> NP </TD>
    <TD> Negate </TD>
    <TD> none  </TD>
</TR>
<TR>
    <TD> PN </TD>
    <TD> none </TD>
    <TD> Negate </TD>
</TR>
<TR>
    <TD> ZP </TD>
    <TD> Force to Zero </TD>
    <TD> none  </TD>
</TR>
</TABLE>
<p>

</div>

<!-- ############################### -->
<!-- # Description                 # -->
<!-- ############################### -->
<h2>Description:</h2>
<div class="Description">
<p>
Add fp32 sources into destination register.  Used as part of FSWZ emulation.</p>

</div>

<!-- ############################### -->
<!-- # Examples                    # -->
<!-- ############################### -->
<h2>Examples:</h2>
<div class="Examples">


<pre>
// DDX implementation
<b>SHFL<b>.BFLY  PT, Ry, Rx, 1,  0x1C03;  // exchange with tid^1, Mask = 5'b11100, Max = 3 (within quad)
<b>FSWZADD</b>   R0,R1,R1,PNNPPNNP;

// DDY implementation for DirectX
<b>SHFL<b>.BFLY  PT, Ry, Rx, 2,  0x1C03;  // exchange with tid^2, Mask = 5'b11100, Max = 3 (within quad)
<b>FSWZADD</b>   R0,R1,R1,PNPNNPNP;

// DDY implementation for OpenGL 
<b>SHFL<b>.BFLY  PT, Ry, Rx, 2,  0x1C03;  // exchange with tid^2, Mask = 5'b11100, Max = 3 (within quad)
<b>FSWZADD</b>   R0,R1,R1,PNPNNPNP;
<b>S2R</b> R1, SR18;                //Accounts for screen origin inversion
<b>FMUL</b> R0, R0, R1;

</pre>

</div>

<!-- ############################### -->
<!-- # Tail                        # -->
<!-- ############################### -->
<div class="Tail">
<p><a href="../opcodes.htm">Back to Index of Instructions</a></p>
</div>
</body>
</html>
