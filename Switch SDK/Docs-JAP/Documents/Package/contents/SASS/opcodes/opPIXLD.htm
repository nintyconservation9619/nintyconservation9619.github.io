<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>PIXLD</title>
<link rel="StyleSheet" href="../style.css" type="text/css" title="general">
</head>
<body class="opcode">

<!-- ############################### -->
<!-- # Opcode                      # -->
<!-- ############################### -->
<h1>
    PIXLD : Pixel Load<br>
    <!-- SUMMARY_TABLE_INFO { description => "Pixel Load" } -->
</h1>


<!-- The following information is used to generate the text in the opcode table in ../opcodes.htm -->
<!-- SUMMARY_TABLE_INFO { section => "Graphics Load/Store Instructions" } -->
<!-- SUMMARY_TABLE_INFO { opcode => "PIXLD", subsection => 5 } -->

<!-- ############################### -->
<!-- # Format                      # -->
<!-- ############################### -->
<h2>Format:</h2>
<div class="Format">

<pre>
SPA 5.0:
<code>        <code>{@{!}Pg}</code>   <code><b>PIXLD</b>.MSCOUNT</code>           <code>Rd</code>                         <code><!-- OPEX_COUNT_4 --><!-- BEGIN &opex("MIO_RD_WR_SCBD") -->{&amp;req_6}</code>   <code>{&amp;rdN}</code>   <code>{&amp;wrN}</code>   <code>{?sched}<!-- END &opex("MIO_RD_WR_SCBD") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "PIXLD" } -->
<code>        <code>{@{!}Pg}</code>   <code><b>PIXLD</b>.COVMASK</code>           <code>Rd</code>                         <code><!-- OPEX_COUNT_4 --><!-- BEGIN &opex("MIO_RD_WR_SCBD") -->{&amp;req_6}</code>   <code>{&amp;rdN}</code>   <code>{&amp;wrN}</code>   <code>{?sched}<!-- END &opex("MIO_RD_WR_SCBD") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "PIXLD" } -->
<code>        <code>{@{!}Pg}</code>   <code><b>PIXLD</b>.COVERED</code>           <code>Rd{, Pd}{, [#ImmU08]}</code>      <code><!-- OPEX_COUNT_4 --><!-- BEGIN &opex("MIO_RD_WR_SCBD") -->{&amp;req_6}</code>   <code>{&amp;rdN}</code>   <code>{&amp;wrN}</code>   <code>{?sched}<!-- END &opex("MIO_RD_WR_SCBD") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "PIXLD" } -->
<code>        <code>{@{!}Pg}</code>   <code><b>PIXLD</b>.COVERED</code>           <code>Rd{, Pd}{, [Ra+#ImmS08]}</code>   <code><!-- OPEX_COUNT_4 --><!-- BEGIN &opex("MIO_RD_WR_SCBD") -->{&amp;req_6}</code>   <code>{&amp;rdN}</code>   <code>{&amp;wrN}</code>   <code>{?sched}<!-- END &opex("MIO_RD_WR_SCBD") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "PIXLD" } -->
<code>        <code>{@{!}Pg}</code>   <code><b>PIXLD</b>.OFFSET</code>            <code>Rd{, [#ImmU08]}</code>            <code><!-- OPEX_COUNT_4 --><!-- BEGIN &opex("MIO_RD_WR_SCBD") -->{&amp;req_6}</code>   <code>{&amp;rdN}</code>   <code>{&amp;wrN}</code>   <code>{?sched}<!-- END &opex("MIO_RD_WR_SCBD") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "PIXLD" } -->
<code>        <code>{@{!}Pg}</code>   <code><b>PIXLD</b>.OFFSET</code>            <code>Rd{, [Ra+#ImmS08]}</code>         <code><!-- OPEX_COUNT_4 --><!-- BEGIN &opex("MIO_RD_WR_SCBD") -->{&amp;req_6}</code>   <code>{&amp;rdN}</code>   <code>{&amp;wrN}</code>   <code>{?sched}<!-- END &opex("MIO_RD_WR_SCBD") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "PIXLD" } -->
<code>        <code>{@{!}Pg}</code>   <code><b>PIXLD</b>.CENTROID_OFFSET</code>   <code>Rd</code>                         <code><!-- OPEX_COUNT_4 --><!-- BEGIN &opex("MIO_RD_WR_SCBD") -->{&amp;req_6}</code>   <code>{&amp;rdN}</code>   <code>{&amp;wrN}</code>   <code>{?sched}<!-- END &opex("MIO_RD_WR_SCBD") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "PIXLD" } -->
<code>        <code>{@{!}Pg}</code>   <code><b>PIXLD</b>.MY_INDEX</code>          <code>Rd{, Pd}</code>                   <code><!-- OPEX_COUNT_4 --><!-- BEGIN &opex("MIO_RD_WR_SCBD") -->{&amp;req_6}</code>   <code>{&amp;rdN}</code>   <code>{&amp;wrN}</code>   <code>{?sched}<!-- END &opex("MIO_RD_WR_SCBD") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "PIXLD" } -->

<code>        <code>{@{!}Pg}</code>   <code><b>PIXLD</b>{.mode}</code>            <code>Rd{, Pd}{, [#ImmU08]}</code>      <code><!-- OPEX_COUNT_4 --><!-- BEGIN &opex("MIO_RD_WR_SCBD") -->{&amp;req_6}</code>   <code>{&amp;rdN}</code>   <code>{&amp;wrN}</code>   <code>{?sched}<!-- END &opex("MIO_RD_WR_SCBD") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "PIXLD" } -->
<code>        <code>{@{!}Pg}</code>   <code><b>PIXLD</b>{.mode}</code>            <code>Rd{, Pd}{, [Ra+#ImmS08]}</code>   <code><!-- OPEX_COUNT_4 --><!-- BEGIN &opex("MIO_RD_WR_SCBD") -->{&amp;req_6}</code>   <code>{&amp;rdN}</code>   <code>{&amp;wrN}</code>   <code>{?sched}<!-- END &opex("MIO_RD_WR_SCBD") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "PIXLD" } -->

 .mode:   { <b>.MSCOUNT, .COVMASK, .COVERED, .OFFSET, .CENTROID_OFFSET, .MY_INDEX, INVALID[2]</b> } 
          .MSCOUNT
                Query number of raster multisample locations (RasterMultiSampleCont).
                Note that in target independent rasterization, this can be different from render target multisample count.
          .COVMASK
                Returns a 32b boolean coverage mask, lsb aligned. Number of valid bits is
                RasterMultiSampleCount which depends on current raster multisample mode.
                support upto 16 bits coverage mask corresponding (upto 16xAA mode).
          .COVERED
                Address contains the sample index (if not specified, a zero is inserted).
                Returns a boolean TRUE/FALSE in Rd after checking if the specified sample index 
                is covered. It can also write the result to predicate Pd.  The sample index is 
                valid from 0 to  RasterMultiSampleCount-1, an out of bounds request will return not 
                covered (FALSE).  This is mostly a utility function since combining COVMASK with 
                BFE and some predicate tests would achieve the same result. 
          .OFFSET
                Address contains the sample index (if not specified, a zero is inserted).
                Returns the sample (dx,dy) offset. The samples are on a 16*16 pixel grid, 
                and are returned as a pair of 16b signed integers in the range (-8,+7). 
                dx starts at bit position 0, dy starts at bit position 16. Sample index is
                valid from 0 to RasterMultiSampleCount-1. IPA accepts the same offset format.
                <b> Note: PIXLD.OFFSET is deprecated </b> and supports only upto 8xMSAA with fixed sample positions. 
                It does not support 16xAA and/or porgrammabale sample positions. 
                .OFFSET functionality is expected to be replaced by LDC lookup.
          .CENTROID_OFFSET
                Returns the offset of the centroid.  IPA accepts the same offset format.
                This is defined to be the center if the pixel is fully covered, or the first sample (See also "Additional Information" below).
                Feeding the output of this query to IPA.OFFSET will produce the same result as IPA.CENTROID.
          .MY_INDEX
                If in SSAA mode, returns the sample index for the current invocation of the shader and 
                sets Pd to true.  If not in SSAA mode, it will return 0 and set Pd to false.

</pre>

</div>

<!-- ############################### -->
<!-- # Description                 # -->
<!-- ############################### -->
<h2>Description:</h2>
<div class="Description">

<p>
Pixel load. Allows input of pixel coverage mask and sample position (dx,dy). </p>
<p>
An optional destination predicate can be specified for the .COVERED and .MY_INDEX modes.  If not 
specified, it will default to P7 (the true predicate), which will suppress the write.  No predicate 
write is ever performed for any PIXLD mode other than .COVERED and .MY_INDEX.
</p>

</div>

<!-- ############################### -->
<!-- # Examples                    # -->
<!-- ############################### -->
<h2>Examples:</h2>
<div class="Examples">

<pre>
<b>PIXLD</b>.COVMASK R0;
</pre>
</div>

<!-- ############################### -->
<!-- # Tail                        # -->
<!-- ############################### -->
<div class="Tail">
<p><a href="../opcodes.htm">Back to Index of Instructions</a></p>
</div>
</body>
</html>
