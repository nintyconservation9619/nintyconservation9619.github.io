<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>IADD</title>
<link rel="StyleSheet" href="../style.css" type="text/css" title="general">
</head>
<body class="opcode">

<!-- ############################### -->
<!-- # Opcode                      # -->
<!-- ############################### -->
<h1>
    IADD : Integer Addition<br>
    <!-- SUMMARY_TABLE_INFO { description => "Integer Addition" } -->
</h1>


<!-- The following information is used to generate the text in the opcode table in ../opcodes.htm -->
<!-- SUMMARY_TABLE_INFO { section => "Integer Instructions" } -->
<!-- SUMMARY_TABLE_INFO { opcode => "IADD32I", subsection => 2 } -->
<!-- SUMMARY_TABLE_INFO { opcode => "IADD", subsection => 2 } -->

<!-- ############################### -->
<!-- # Format                      # -->
<!-- ############################### -->
<h2>Format:</h2>
<div class="Format">

<pre>
SPA 5.0:
<code>        <code>{@{!}Pg}</code>   <code><b>IADD</b>{.PO}{.SAT}{.X}</code>      <code>Rd{.CC}, {-}Ra, {-}Sb</code>    <code><!-- OPEX_COUNT_2 --><!-- BEGIN &opex("MATH") -->{&amp;req_6}</code>   <code>{?sched}<!-- END &opex("MATH") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "IADD" } -->
<code>        <code>{@{!}Pg}</code>   <code><b>IADD32I</b>{.PO}{.SAT}{.X}</code>   <code>Rd{.CC}, {-}Ra, #Imm32</code>   <code><!-- OPEX_COUNT_2 --><!-- BEGIN &opex("MATH") -->{&amp;req_6}</code>   <code>{?sched}<!-- END &opex("MATH") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "IADD32I" } -->

.PO:    Plus one (for averaging)      

.SAT:   Saturate 
        When .SAT is specified, the inputs are treated as S32 values,
        and the result is clamped to the min/max S32 values instead of
        the default behavior of wrapping.

.X:     Upper bit extended precision add

.CC:    Write condition codes

<b>IADD</b>, allows the following source Sb:
    Sb(register)
    Sb(constant with immediate address)
    Sb(#IMM20)

The following add modes exist for the combination of source negates and .X:
       Ra+Sb:     Ra +  Sb + 0               //
       Ra-Sb:     Ra + ~Sb + 1               //
      -Ra+Sb:    ~Ra +  Sb + 1               //
  .PO       :     Ra +  Sb + 1               // for average
   .X  Ra+Sb:     Ra +  Sb + Carry           // extended precision mode
   .X  Ra-Sb:     Ra + ~Sb + Carry           // extended precision mode
   .X -Ra+Sb:    ~Ra +  Sb + Carry           // extended precision mode
   .X -Ra-Sb:     ILLEGAL                    // not supported

    Note: It is illegal to negate both sources at the same time.
    Note: It is illegal to negate either source operand in .PO mode.
    Note: It is illegal to combine .PO with .X
</pre>


</div>

<!-- ############################### -->
<!-- # Description                 # -->
<!-- ############################### -->
<h2>Description:</h2>
<div class="Description">

<p>
Add sources into destination with possible saturate.  Supports 2's complement addition/subtraction via optional "-" on sources.</p>

<p>
An extended-precision add is performed by processing words in order from least-significant
to most-significant, adding with carry-in for all but the initial IADD.  At the end of the
extended-precision add sequence, the condition code flags reflect the overall multi-word
result.  The sign, carry, and overflow flags are set as usual in .X mode, whereas the zero
flag value is accumulated in .X mode.  See example at bottom.</p>

</p>

</div>

<!-- ############################### -->
<!-- # Examples                    # -->
<!-- ############################### -->
<h2>Examples:</h2>
<div class="Examples">

<pre>
<b>IADD</b> R0,R1,R2;
</pre>
</div>

<!-- ############################### -->
<!-- # Tail                        # -->
<!-- ############################### -->
<div class="Tail">
<p><a href="../opcodes.htm">Back to Index of Instructions</a></p>
</div>
</body>
</html>
