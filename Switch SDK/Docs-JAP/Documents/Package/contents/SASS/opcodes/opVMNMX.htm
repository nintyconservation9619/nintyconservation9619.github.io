<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>VMNMX</title>
<link rel="StyleSheet" href="../style.css" type="text/css" title="general">
</head>
<body class="opcode">

<!-- ############################### -->
<!-- # Opcode                      # -->
<!-- ############################### -->
<h1>
    VMNMX : Integer Byte/Short Minimum/Maximum<br>
    <!-- SUMMARY_TABLE_INFO { description => "Integer Byte/Short Minimum/Maximum" } -->
</h1>


<!-- The following information is used to generate the text in the opcode table in ../opcodes.htm -->
<!-- SUMMARY_TABLE_INFO { section => "Video Instructions" } -->
<!-- SUMMARY_TABLE_INFO { opcode => "VMNMX", subsection => 2 } -->

<!-- ############################### -->
<!-- # Format                      # -->
<!-- ############################### -->
<h2>Format</h2>
<div class="Format">

<pre>
SPA 5.0:
<code>        <code>{@{!}Pg}</code>   <code><b>VMNMX</b>{.dfmt}{.safmt.sbfmt}{.mn}{.SAT}{.op2}</code>   <code>Rd{.CC}, Ra{.partselA}, Rb{.partselB}, Rc</code>   <code><!-- OPEX_COUNT_2 --><!-- BEGIN &opex("MATH") -->{&amp;req_6}</code>   <code>{?sched}<!-- END &opex("MATH") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "VMNMX" } -->
<code>        <code>{@{!}Pg}</code>   <code><b>VMNMX</b>{.dfmt}{.safmt.ifmt}{.mn}{.SAT}{.op2}</code>    <code>Rd{.CC}, Ra{.partselA}, #imm16,        Rc</code>   <code><!-- OPEX_COUNT_2 --><!-- BEGIN &opex("MATH") -->{&amp;req_6}</code>   <code>{?sched}<!-- END &opex("MATH") --></code>   <code>;</code>   </code><!-- SUMMARY_TABLE_INFO { define_opcode => "VMNMX" } -->

 .dfmt:       { <b>.UD, .SD*</b> }
              Destination format (unsigned or signed)

 .safmt:      { <b>.U32, .S32*, .U16, .S16, .U8, .S8</b>}
 .sbfmt:      { <b>.U32, .S32*, .U16, .S16, .U8, .S8</b>} 
 .ifmt:       {              <b>.U16, .S16*</b>          }
              Source formats

 .mn:         { <b>.MN*, .MX</b>}
              Select between minimum (.MN) or maximum (.MX)

 .SAT:        Saturate destination based on .op2 and final sign

 .op2:        { <b>.PASS*, .MRG_16H, .MRG_16L, .MRG_8B0, .MRG_8B2, .ACC, .MIN, .MAX</b>}

 .partselA:   if (.U8|.S8)   { <b>.B0*, .B1, .B2, .B3</b>}
              if (.U16|.S16) { <b>.H0*, .H1</b>}

 .partselB:   if (.U8|.S8)   { <b>.B0*, .B1, .B2, .B3</b>} 
              if (.U16|.S16) { <b>.H0*, .H1</b>}

</pre>
</div>

<!-- ############################### -->
<!-- # Description                 # -->
<!-- ############################### -->
<h2>Description</h2>
<div class="Description">

<p>
Miminum or maximum of sources into destination with optional second stage 
operation and optional saturate.</p>

<h4>Basic math operation:</h4>
<p>
Both inputs are are first promoted to S33 (based on their individual .S or .U format), then
the minumum/maximum is done, producing a S33 result.
The intermediate result is promoted to S34 for subsequent processing.</p>

</div>

<!-- ############################### -->
<!-- # Examples                    # -->
<!-- ############################### -->
<h2>Examples:</h2>
<div class="Examples">

<pre>
<b>VMNMX</b>.MN             R0, R1, R2, RZ;  # MIN
<b>VMNMX</b>.UD.U16.U16.MX  R0, R1, R2, RZ;  # MAX

<b>VMNMX</b>.U32.U16.MN.ACC R0, R1,  5, R3;  # R0 = min(R1, 5) + R3
</pre>

</div>

<!-- ############################### -->
<!-- # Tail                        # -->
<!-- ############################### -->
<div class="Tail">
<p><a href="../opcodes.htm">Back to Index of Instructions</a></p>
</div>
</body>
</html>
